version: '3'
services:
  session:
    build: 'net.whisper.session'
    networks:
      - whispernet
    hostname: session.whisper.net
    container_name: session
    depends_on:
      - broker
      - gateway
  wssession:
    build: 'net.whisper.wssession'
    networks:
      - whispernet
    hostname: wssession.whisper.net
    container_name: wssession
    depends_on:
      - broker
      - session
  gateway:
    build:
      context: './nginx'
      dockerfile: './Dockerfile.qa'
    ports:
      - '80:80'
      - '443:443'
    networks:
      - whispernet
    hostname: gateway.whisper.net
    container_name: gateway
    depends_on:
      - frontend
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - whispernet
    hostname: zookeeper.whisper.net
  broker:
    depends_on:
      - zookeeper
    build: './broker'
    container_name: broker
    networks:
      - whispernet
    hostname: broker.whisper.net
  cache:
    build: './redis'
    restart: always
    command: redis-server --loglevel warning
    volumes:
      - cache:/data
    networks:
      - whispernet
  wsserver:
    build: './signal-server'
    networks:
      - whispernet
    depends_on:
      - broker
      - wssession
  frontend:
    build:
      context: './ui'
      dockerfile: './web/Dockerfile'
    networks:
      - whispernet
    hostname: frontend.whisper.net
    container_name: frontend
  coturn:
    build:
      context: './coturn'
      dockerfile: './Dockerfile.qa'
    hostname: coturn
    depends_on:
      - wsserver
    networks:
      - whispernet

    container_name: coturn
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/udp"
      - "5349:5349/tcp"
      - "55000-56000:55000-56000/udp"
networks:
  whispernet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
volumes:
  cache:
    driver: local
  kafka:
    driver: local