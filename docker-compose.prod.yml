version: '3'
services:
  loki:
    build:
      context: './loki'
      dockerfile: 'Dockerfile.prod'
    container_name: loki
    volumes:
      - './loki/data:/data'
    hostname: loki.whisper.net
    networks:
      - whispernet
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  grafana:
    build:
      context: './grafana'
      dockerfile: './Dockerfile.prod'
    hostname: grafana.whisper.net
    container_name: grafana
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - loki
    networks:
      - whispernet
    security_opt:
      - no-new-privileges:true
  promtail:
    build:
      context: 'promtail'
      dockerfile: 'Dockerfile.prod'
    hostname: promtail.whisper.net
    container_name: promtail
    volumes:
      - kafka-log:/var/log/external/kafka:ro
      - nginx-log:/var/log/external/nginx:ro
    networks:
      - whispernet
    depends_on:
      - loki
    security_opt:
      - no-new-privileges:true
  session:
    build:
      context: 'net.whisper.session'
      dockerfile: 'Dockerfile.prod'
    networks:
      - whispernet
    hostname: session.whisper.net
    container_name: session
    depends_on:
      - broker
      - gateway
      - loki
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  wssession:
    build:
      context: 'net.whisper.wssession'
      dockerfile: './Dockerfile.prod'
    networks:
      - whispernet
    hostname: wssession.whisper.net
    container_name: wssession
    depends_on:
      - broker
      - session
      - loki
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  security:
    build:
      context: 'net.whisper.security'
      dockerfile: './Dockerfile.prod'
    networks:
      - whispernet-security
    hostname: security.whisper.net
    container_name: security
    depends_on:
      - broker
      - loki
      - app-db
      - cache-security
      - gateway
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  gateway:
    build:
      context: './nginx'
      dockerfile: './Dockerfile.prod'
    ports:
      - '8099:80'
      - '8098:443'
    networks:
      - whispernet
      - whispernet-ui
      - whispernet-security
    hostname: gateway.whisper.net
    container_name: gateway
    security_opt:
      - no-new-privileges:true
    volumes:
      - nginx-log:/var/log/nginx
  gateway-cms:
    build:
      context: './nginx-cms'
      dockerfile: './Dockerfile.prod'
    ports:
      - '9099:80'
      - '9098:443'
    networks:
      - whispernet-cms
    hostname: gateway-cms.whisper.net
    container_name: gateway-cms
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - whispernet
    hostname: zookeeper.whisper.net
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  broker:
    depends_on:
      - zookeeper
    build:
      context: './broker'
      dockerfile: './Dockerfile.prod'
    container_name: broker
    networks:
      - whispernet-security
      - whispernet
    hostname: broker.whisper.net
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
    volumes:
      - kafka-log:/var/log/kafka:z
  cache-security:
    build:
      context: './redis-security'
      dockerfile: './Dockerfile.prod'
    restart: always
    command: redis-server --loglevel warning
    volumes:
      - redis-security:/data
    networks:
      - whispernet-security
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
    read_only: true
  cache:
    build:
      context: './redis'
      dockerfile: './Dockerfile.prod'
    restart: always
    volumes:
      - cache:/data
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
    read_only: true
    networks:
      - whispernet
  wsserver:
    depends_on:
      - broker
      - wssession
    build:
      context: './signal-server'
      dockerfile: './Dockerfile.prod'
    networks:
      - whispernet
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  approving:
    depends_on:
      - broker
      - session
    build:
      context: './responder-approving'
      dockerfile: './Dockerfile.prod'
    container_name: approving
    hostname: approving
    networks:
      - whispernet
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  app-db:
    build:
      context: './app-db'
      dockerfile: './Dockerfile.prod'
    hostname: app-db.whisper.net
    container_name: app-db
    networks:
      - whispernet-security
    volumes:
      - app-db:/var/lib/mysql
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  cms-db:
    build:
      context: './cms-db'
      dockerfile: './Dockerfile.prod'
    hostname: cms-db.whisper.net
    container_name: cms-db
    networks:
      - whispernet-cms
    volumes:
      - cms-db:/var/lib/mysql
    security_opt:
      - no-new-privileges:true
  cms:
    build:
      context: './cms'
      dockerfile: './Dockerfile.prod'
    hostname: cms.whisper.net
    container_name: cms
    networks:
      - whispernet-cms
    security_opt:
      - no-new-privileges:true
  frontend:
    build:
      context: './ui'
      dockerfile: './web/Dockerfile.prod'
    networks:
      - whispernet-ui
    hostname: frontend.whisper.net
    container_name: frontend
    security_opt:
      - no-new-privileges:true
    cap_add:
      - ALL
  cms-ui:
    build:
      context: './ui'
      dockerfile: './cms-ui/Dockerfile.prod'
    networks:
      - whispernet-cms
    hostname: cms-ui.whisper.net
    container_name: cms-ui
    security_opt:
      - no-new-privileges:true
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer.whisper.net
    restart: always
    networks:
      - whispernet-admin
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    security_opt:
      - no-new-privileges:true
networks:
  whispernet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
  whispernet-cms:
    driver: bridge
    ipam:
      config:
        - subnet: 173.19.0.0/28
  whispernet-security:
    driver: bridge
    ipam:
      config:
        - subnet: 174.19.0.0/28
  whispernet-ui:
    driver: bridge
    ipam:
      config:
        - subnet: 175.19.0.0/16
  whispernet-admin:
    driver: bridge
    ipam:
      config:
        - subnet: 176.19.0.0/16
volumes:
  cms-db:
    driver: local
  redis-security:
    driver: local
  cache:
    driver: local
  kafka:
    driver: local
  portainer-data:
    driver: local
  app-db:
    driver: local
  grafana:
    driver: local
  kafka-log:
    driver: local
  nginx-log:
    driver: local