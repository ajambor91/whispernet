version: '3'
services:
  loki:
    build:
      context: './loki'
      dockerfile: './Dockerfile.dev'
    container_name: loki
    volumes:
      - './loki/data:/data'
    hostname: loki.whisper.net
    networks:
      - whispernet
  grafana:
    build:
      context: './grafana'
      dockerfile: './Dockerfile.dev'
    hostname: grafana.whisper.net
    container_name: grafana
    volumes:
      - './grafana/data-grafana-local:/var/lib/grafana'
    ports:
      - "3000:3000"
    depends_on:
      - loki
    networks:
      - whispernet
  promtail:
    build:
      context:  './promtail'
      dockerfile: './Dockerfile.dev'
    hostname: promtail.whisper.net
    container_name: promtail
    volumes:
      - kafka-log:/var/log/external/kafka:ro
      - nginx-log:/var/log/external/nginx:ro
    networks:
      - whispernet
    depends_on:
      - loki
  session:
    build:
      context: './net.whisper.session'
      dockerfile: './Dockerfile.dev'
    networks:
      - whispernet
    hostname: session.whisper.net
    container_name: session
    depends_on:
      - broker
      - gateway
      - loki
  wssession:
    build:
      context: './net.whisper.wssession'
      dockerfile: './Dockerfile.dev'
    networks:
      - whispernet
    hostname: wssession.whisper.net
    container_name: wssession
    depends_on:
      - broker
      - session
      - loki
  gateway:
    build:
      context: './nginx'
      dockerfile: './Dockerfile.dev'
    ports:
      - '8099:80'
      - '8098:443'
    networks:
      - whispernet-security
      - whispernet
      - whispernet-cms
    hostname: gateway.whisper.net
    container_name: gateway
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf'
      - nginx-log:/var/log/nginx
  gateway-cms:
    build:
      context: './nginx-cms'
      dockerfile: './Dockerfile.dev'
    ports:
      - '9099:80'
      - '9098:443'
    networks:
      - whispernet-cms
    hostname: gateway-cms.whisper.net
    container_name: gateway-cms
    volumes:
      - './nginx-cms/nginx.conf:/etc/nginx/nginx.conf'
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - whispernet
    hostname: zookeeper.whisper.net
  broker:
    depends_on:
      - zookeeper
    build:
      context: './broker'
      dockerfile: 'Dockerfile.dev'
    container_name: broker
    user: "1000:1000"
    volumes:
      - kafka-log:/var/log/kafka:z
    networks:
      - whispernet
      - whispernet-security
    hostname: broker.whisper.net
  cache-security:
    build:
      context: './redis-security'
      dockerfile: './Dockerfile.dev'
    restart: always
    command: redis-server --loglevel warning
    volumes:
      - redis-security:/data
    networks:
      - whispernet-security
    ports:
      - '6379:6379'
  cache:
    build:
      context: './redis'
      dockerfile: './Dockerfile.dev'
    restart: always
    command: redis-server --loglevel warning
    volumes:
      - cache:/data
    networks:
      - whispernet
  wsserver:
    depends_on:
      - broker
      - wssession
    build:
      context: './signal-server'
      dockerfile: './Dockerfile.dev'
    networks:
      - whispernet
  approving:
    depends_on:
      - broker
      - session
    build:
      context: './responder-approving'
      dockerfile: './Dockerfile.local'
    container_name: approving
    hostname: approving
    networks:
      - whispernet
  coturn:
    build:
      context: './coturn'
      dockerfile: './Dockerfile.dev'
    hostname: coturn
    depends_on:
      - wsserver
    networks:
      whispernet:
        ipv4_address: 172.18.0.10
    container_name: coturn
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/udp"
      - "5349:5349/tcp"
  app-db:
    build:
      context: './app-db'
      dockerfile: './Dockerfile.dev'
    hostname: app-db.whisper.net
    container_name: app-db
    networks:
      - whispernet-security
    volumes:
      - './app-db/app-data:/var/lib/mysql'
      - './app-db/logs:/var/log/mysql'
    ports:
      - 3307:3306
  security:
    build:
      context: 'net.whisper.security'
      dockerfile: './Dockerfile.dev'
    networks:
      - whispernet-security
    hostname: security.whisper.net
    container_name: security
    depends_on:
      - broker
      - loki
  cms-db:
    build:
      context: './cms-db'
      dockerfile: './Dockerfile.dev'
    hostname: cms-db.whisper.net
    container_name: cms-db
    networks:
      - whispernet-cms
    volumes:
      - './cms-db/cms-data:/var/lib/mysql'
    ports:
      - 3306:3306
  cms:
    build:
      dockerfile: './cms/Dockerfile.dev'
    hostname: cms.whisper.net
    container_name: cms
    networks:
      - whispernet-cms
    volumes:
      - './cms/project-root:/var/www/html'
networks:
  whispernet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
  whispernet-cms:
    driver: bridge
    ipam:
      config:
        - subnet: 173.19.0.0/28
  whispernet-security:
    driver: bridge
    ipam:
      config:
        - subnet: 174.19.0.0/28
volumes:
  redis-security:
    driver: local
  cache:
    driver: local
  kafka:
    driver: local
  kafka-log:
    driver: local
  nginx-log:
    driver: local
